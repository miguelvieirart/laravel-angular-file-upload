{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/post.ts","./src/app/app.module.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/post.service.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Post } from './post';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meuapp';\n  posts: Post[] = [];\n\n  constructor(\n    public dialog: MatDialog,\n    public postService: PostService) {}\n\n\n  ngOnInit() {\n    this.posts = this.postService.posts;\n  }\n\n  openDialog() {\n   const dialogRef = this.dialog.open(PostDialogComponent, {\n     width:'600px'\n   });\n   dialogRef.afterClosed().subscribe(\n      (result) => {\n      if (result) {\n        this.postService.salvar(result.post, result.arquivo);\n      }\n    }\n   );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Projeto Laravel + Angular</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n  <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n  <mat-icon>\n    add\n  </mat-icon>\n</button>","export class Post {\r\n    constructor (\r\n        public nome : string,\r\n        public titulo : string,\r\n        public subtitulo : string,\r\n        public email : string,\r\n        public mensagem : string,\r\n        public arquivo? : string,\r\n        public id? : number,\r\n        public likes? : number,\r\n    ) {}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button'; \nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n\n  providers: [\n    PostService\n  ],\n  \n  entryComponents: [\n    PostDialogComponent\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  // @Input() post!: Post;\n\n  @Input() post!: Post;\n\n  constructor(\n    private postService: PostService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  like() {\n    this.postService.like(this.post.id!);\n  }\n\n  apagar() {\n    this.postService.apagar(this.post.id!);\n  }\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{ post.titulo }}</mat-card-title>\n      <mat-card-subtitle>{{ post.subtitulo }}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n       {{ post.mensagem }}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color='primary' (click)=\"like()\">LIKE</button>\n      <button mat-button color='warn' (click)=\"apagar()\">Apagar</button>\n      <mat-icon color='warn' *ngIf='post.likes!>0' [matBadge]=\"post.likes\" matBadgeColor=\"warn\" matBadgeOverlap=\"false\">favorite</mat-icon>\n    </mat-card-actions>\n  </mat-card>\n  ","import { HttpClient, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n\n    this.http.get(\"/api/\").subscribe(\n      (posts: any) => {\n        for(let p of posts) {\n          this.posts.push(\n            new Post(\n              p.nome,\n              p.titulo,\n              p.subtitulo,\n              p.email,\n              p.mensagem,\n              p.arquivo,\n              p.id,\n              p.likes\n            )\n          );\n        }\n      }\n    );\n  }\n\n\n  salvar(post: Post, file: File) {\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post(\"/api/\", uploadData, { reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n        if (event.type == HttpEventType.Response) {\n          let p: any = event.body;\n          this.posts.push(\n            new Post(\n              p.nome,\n              p.titulo,\n              p.subtitulo,\n              p.email,\n              p.mensagem,\n              p.arquivo,\n              p.id,\n              p.likes\n            )\n          );\n\n        }\n        if (event.type == HttpEventType.UploadProgress) {\n          console.log(\"Upload Progress\");\n          console.log(event);\n        }\n      });\n  }\n\n  like(id: number) {\n\n    if (typeof(id) != undefined) {\n\n      this.http.get('/api/like/' + id).subscribe(\n        (event: any) => {\n          let p =  this.posts.find((p) => p.id == id); \n          p!.likes = event.likes;\n        }\n      )\n\n    }\n  }\n\n  apagar(id: number) {\n    this.http.delete('/api/' + id)\n    .subscribe((event) => {\n      // console.log(event);\n      let i =  this.posts.findIndex((p) => p.id == id);\n      if (i >= 0) {\n        this.posts.splice(i,1)\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\n\n\nexport class PostDialogComponent implements OnInit {\n\n  public nomearquivo: string ='';\n\n  dados = {\n    post: new Post(\"\",\"\",\"\",\"\",\"\",\"\"),\n    arquivo: null\n  }\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouarquivo(event: any) {\n    // console.log(event.target.files[0])\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around start\" > \n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\">\n\n        <mat-form-field fxFlex=\"50%\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40%\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu email</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"50%\">\n            <input matInput placeholder=\"Titulo da Mensagem\" [(ngModel)]=\"dados.post.titulo\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40%\">\n            <input matInput placeholder=\"Subtitulo da Mensagem\" [(ngModel)]=\"dados.post.subtitulo\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"100%\">\n            <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\">\n\n            </textarea>\n        </mat-form-field>\n\n    </div>\n</div>\n\n<input type=\"file\" style=\"display:none;\" (change)=\"mudouarquivo($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma Foto\n</button>\n<p *ngIf=\"nomearquivo!=''\">\n    <strong>Arquivo: </strong>{{ nomearquivo }}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click)=\"salvar()\">\n        Ok\n    </button>\n    <button mat-button color=\"warn\" (click)=\"cancelar()\">\n        Cancelar\n    </button>\n\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}